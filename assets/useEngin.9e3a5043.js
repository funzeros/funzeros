import"./pixi.js.dd61c7eb.js";import{c as n,g as c,G as o}from"./@pixi.dfabe1c3.js";const d="\u5730\u56FE",l=[{type:"circle",x:50,y:50,width:10},{type:"rect",x:45,y:50,width:10,height:200},{type:"roundedRect",x:40,y:0,width:1e4,height:10,radius:4}];var x={name:d,list:l};const u=x.list;class m{constructor(e){this.maxSize=1e5,this.bgColor=3223857,this.defaultColor=11184810,this.center=Math.round(this.maxSize/2),this.roleP={x:0,y:0},this.width=e.clientWidth,this.height=e.clientHeight,this.app=new n({width:this.width,height:this.height,antialias:!0,backgroundAlpha:0,resolution:1,backgroundColor:this.bgColor}),this.mapContainer=new c,this.roleContainer=new c}camera(){const e=-this.calcXY(this.roleP.x)+Math.round(this.width/2),i=-this.calcXY(this.roleP.y)+Math.round(this.height/2);return{x:e,y:i}}calcXY(e){return this.center+e}circle(e,i,t,r=this.defaultColor){const h=new o;h.beginFill(r),h.drawCircle(0,0,t),h.x=this.calcXY(e),h.y=this.calcXY(i),h.endFill(),this.mapAdd(h)}rect(e,i,t,r,h=this.defaultColor){const s=new o;s.beginFill(h),s.drawRect(0,0,t,r),s.x=this.calcXY(e),s.y=this.calcXY(i),s.endFill(),this.mapAdd(s)}roundedRect(e,i,t,r,h,s=this.defaultColor){const a=new o;a.beginFill(s),a.drawRoundedRect(0,0,t,r,h),a.x=this.calcXY(e),a.y=this.calcXY(i),a.endFill(),this.mapAdd(a)}renderMap(e){for(let i=0;i<e.length;i++){const t=e[i];try{t.type==="circle"?this.circle(t.x,t.y,t.width,t.color):t.type==="rect"?this.rect(t.x,t.y,t.width,t.height||t.width,t.color):t.type==="roundedRect"&&this.roundedRect(t.x,t.y,t.width,t.height||t.width,t.radius||0,t.color)}catch(r){console.error(new Error(r),t,"\u56FE\u5757\u6E32\u67D3\u51FA\u9519")}}}stageAdd(e){e.width=this.maxSize,e.height=this.maxSize,e.x=this.camera().x,e.y=this.camera().y,this.app.stage.addChild(e)}refreshCamera(){this.roleContainer.x=this.camera().x,this.roleContainer.y=this.camera().y,this.mapContainer.x=this.camera().x,this.mapContainer.y=this.camera().y}roleAdd(e){this.roleContainer.addChild(e)}roleDel(e){this.roleContainer.removeChild(e)}mapAdd(e){this.mapContainer.addChild(e)}static boxesIntersect(e,i){const t=e.getBounds(),r=i.getBounds();return t.x+t.width>r.x&&t.x<r.x+r.width&&t.y+t.height>r.y&&t.y<r.y+r.height}static arrayBoxesIntersect(e,i){return e.some(t=>this.boxesIntersect(t,i))}}export{m as E,u as m};
